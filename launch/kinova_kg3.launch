<launch>

  <env name="GAZEBO_MODEL_PATH" value="$(find kinova_kg3)/gazebo" />
  <env name="GAZEBO_RESOURCE_PATH" value="$(find kinova_kg3)/gazebo"/>

  <param name="robot_description" command="$(find xacro)/xacro.py '$(find kinova_kg3)/urdf/kinova_kg3.xacro'"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find kinova_kg3)/gazebo/config/kinova_kg3_controllers.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="jaco_joint_finger_1_position_controller jaco_joint_finger_tip_1_position_controller jaco_joint_finger_2_position_controller jaco_joint_finger_tip_2_position_controller jaco_joint_finger_3_position_controller jaco_joint_finger_tip_3_position_controller joint_state_controller"/> 
 
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/kinova_kg3.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

 <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>


</launch>
